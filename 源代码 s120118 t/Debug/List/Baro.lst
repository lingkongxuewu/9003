###############################################################################
#                                                                             #
# IAR C/C++ Compiler V6.21.3.50641 for Atmel AVR        30/May/2018  14:28:52 #
# Copyright 1996-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  G:\罗盘\源代码 s120118 t\src\Baro.c                      #
#    Command line =  "G:\罗盘\源代码 s120118 t\src\Baro.c" --cpu=m88 -ms -o   #
#                    "G:\罗盘\源代码 s120118 t\Debug\Obj\" -lCN               #
#                    "G:\罗盘\源代码 s120118 t\Debug\List\"                   #
#                    --initializers_in_flash --no_inline --no_cross_call      #
#                    --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e            #
#                    --eeprom_size 512 --clib -Om                             #
#    List file    =  G:\罗盘\源代码 s120118 t\Debug\List\Baro.lst             #
#    Object file  =  G:\罗盘\源代码 s120118 t\Debug\Obj\Baro.r90              #
#                                                                             #
#                                                                             #
###############################################################################

G:\罗盘\源代码 s120118 t\src\Baro.c
      1          
      2          /*******************************Copyright (c)***************************/
      3          /*
      4           *                         深圳铭之光电子技术有限公司
      5           *                         工　　　　　程　　　　　部
      6           *                         http://www.sinocomopto.com
      7           */
      8          /***********************************************************************/
      9          #define   __BARO_C__
     10          #include  "_Include.h"
     11          
     12          /***********************************************************************/
     13          /*
     14           *功能：
     15           *入口：
     16           *出口：
     17           *备注：
     18           *函数性质：
     19           */

   \                                 In  segment CODE, align 2, keep-with-next
     20          void Scp_AbtCntProc (void)
   \                     Scp_AbtCntProc:
     21          {	int16u temp;
   \   00000000   ....               RCALL   ?PROLOGUE4_L09
     22          	int32u baro;
     23          	
     24          	
     25          	if(Scp_BusyTest()==0)return;
   \   00000002   ....               RCALL   Scp_BusyTest
   \   00000004   2300               TST     R16
   \   00000006   F409               BRNE    $+2+2
   \   00000008   C046               RJMP    ??Scp_AbtCntProc_0
     26          	
     27          	temp=Scp_DirRegRd(0x21,2);							//读温度
   \   0000000A   E012               LDI     R17, 2
   \   0000000C   E201               LDI     R16, 33
   \   0000000E   ....               RCALL   Scp_DirRegRd
     28          	temp=(0x3FFF&temp)>>1;
   \   00000010   9516               LSR     R17
   \   00000012   9507               ROR     R16
   \   00000014   711F               ANDI    R17, 0x1F
     29          	if(0==(temp&0x1000)){ TempVal=temp; }
   \   00000016   FB14               BST     R17, 4
   \   00000018   F416               BRTC    ??Scp_AbtCntProc_1
     30          	else                { TempVal=temp-0x2000; }
   \   0000001A   5000               SUBI    R16, 0
   \   0000001C   4210               SBCI    R17, 32
   \                     ??Scp_AbtCntProc_1:
   \   0000001E   9300....           STS     TempVal, R16
   \   00000022   9310....           STS     (TempVal + 1), R17
     31          	
     32          	baro=(int32u)((0x0007)&Scp_DirRegRd(0x1F,1));		//读气压
   \   00000026   E011               LDI     R17, 1
   \   00000028   E10F               LDI     R16, 31
   \   0000002A   ....               RCALL   Scp_DirRegRd
   \   0000002C   7007               ANDI    R16, 0x07
   \   0000002E   E010               LDI     R17, 0
   \   00000030   01C8               MOVW    R25:R24, R17:R16
     33          	baro=(baro<<16);
     34          	baro|=(int32u)Scp_DirRegRd(0x20,2);
   \   00000032   E0B0               LDI     R27, 0
   \   00000034   2FA8               MOV     R26, R24
   \   00000036   E012               LDI     R17, 2
   \   00000038   E200               LDI     R16, 32
   \   0000003A   ....               RCALL   Scp_DirRegRd
     35          	baro=(baro>>2);
     36          	
     37          	BaroVal=baro+BaroOffset;
   \   0000003C   E042               LDI     R20, 2
   \   0000003E   019D               MOVW    R19:R18, R27:R26
   \   00000040   ....               RCALL   ?UL_SHR_L03
   \   00000042   9140....           LDS     R20, BaroOffset
   \   00000046   9150....           LDS     R21, (BaroOffset + 1)
   \   0000004A   2F65               MOV     R22, R21
   \   0000004C   0F66               LSL     R22
   \   0000004E   0B66               SBC     R22, R22
   \   00000050   0F04               ADD     R16, R20
   \   00000052   1F15               ADC     R17, R21
   \   00000054   1F26               ADC     R18, R22
   \   00000056   1F36               ADC     R19, R22
   \   00000058   ....               LDI     R30, LOW(BaroVal)
   \   0000005A   ....               LDI     R31, (BaroVal) >> 8
   \   0000005C   8300               ST      Z, R16
   \   0000005E   8311               STD     Z+1, R17
   \   00000060   8322               STD     Z+2, R18
   \   00000062   8333               STD     Z+3, R19
     38          	AltiVal=Alti_Baro2High(BaroVal+SEALEVEL_REF-SeaLevel);
   \   00000064   8100               LD      R16, Z
   \   00000066   8111               LDD     R17, Z+1
   \   00000068   8122               LDD     R18, Z+2
   \   0000006A   8133               LDD     R19, Z+3
   \   0000006C   5303               SUBI    R16, 51
   \   0000006E   4714               SBCI    R17, 116
   \   00000070   4F2E               SBCI    R18, 254
   \   00000072   4F3F               SBCI    R19, 255
   \   00000074   ....               LDI     R30, LOW(SeaLevel)
   \   00000076   ....               LDI     R31, (SeaLevel) >> 8
   \   00000078   8140               LD      R20, Z
   \   0000007A   8151               LDD     R21, Z+1
   \   0000007C   8162               LDD     R22, Z+2
   \   0000007E   8173               LDD     R23, Z+3
   \   00000080   1B04               SUB     R16, R20
   \   00000082   0B15               SBC     R17, R21
   \   00000084   0B26               SBC     R18, R22
   \   00000086   0B37               SBC     R19, R23
   \   00000088   ....               RCALL   Alti_Baro2High
   \   0000008A   ....               LDI     R30, LOW(AltiVal)
   \   0000008C   ....               LDI     R31, (AltiVal) >> 8
   \   0000008E   8300               ST      Z, R16
   \   00000090   8311               STD     Z+1, R17
   \   00000092   8322               STD     Z+2, R18
   \   00000094   8333               STD     Z+3, R19
     39          	
     40          }
   \                     ??Scp_AbtCntProc_0:
   \   00000096   E0E4               LDI     R30, 4
   \   00000098   ....               RJMP    ?EPILOGUE_B4_L09
     41          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      4      4   Scp_AbtCntProc
        4      2   -> Alti_Baro2High
        4      2   -> Scp_BusyTest
        4      2   -> Scp_DirRegRd


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     154  Scp_AbtCntProc

 
 154 bytes in segment CODE
 
 154 bytes of CODE memory

Errors: none
Warnings: none
